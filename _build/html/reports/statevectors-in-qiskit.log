Traceback (most recent call last):
  File "/home/kawai/anaconda3/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/kawai/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/kawai/anaconda3/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/kawai/anaconda3/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/home/kawai/anaconda3/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/home/kawai/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/kawai/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/kawai/anaconda3/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# generate |0> and |1> as VectorStateFn
ket1 = VectorStateFn([0,1])

# construct cos(pi/4) |0> + sin(pi/4) |1> and print the statevector via `Statevector` class
psi = np.cos(np.pi/4) * ket0 + np.sin(np.pi/4) * ket1
psi.primitive.draw('latex')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mQiskitError[0m                               Traceback (most recent call last)
Input [0;32mIn [7][0m, in [0;36m<cell line: 5>[0;34m()[0m
[1;32m      2[0m ket1 [38;5;241m=[39m VectorStateFn([[38;5;241m0[39m,[38;5;241m1[39m])
[1;32m      4[0m [38;5;66;03m# construct cos(pi/4) |0> + sin(pi/4) |1> and print the statevector via `Statevector` class[39;00m
[0;32m----> 5[0m psi [38;5;241m=[39m [43mnp[49m[38;5;241;43m.[39;49m[43mcos[49m[43m([49m[43mnp[49m[38;5;241;43m.[39;49m[43mpi[49m[38;5;241;43m/[39;49m[38;5;241;43m4[39;49m[43m)[49m[43m [49m[38;5;241;43m*[39;49m[43m [49m[43mket0[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[43mnp[49m[38;5;241;43m.[39;49m[43msin[49m[43m([49m[43mnp[49m[38;5;241;43m.[39;49m[43mpi[49m[38;5;241;43m/[39;49m[38;5;241;43m4[39;49m[43m)[49m[43m [49m[38;5;241;43m*[39;49m[43m [49m[43mket1[49m
[1;32m      6[0m psi[38;5;241m.[39mprimitive[38;5;241m.[39mdraw([38;5;124m'[39m[38;5;124mlatex[39m[38;5;124m'[39m)

File [0;32m~/anaconda3/lib/python3.9/site-packages/qiskit/quantum_info/states/quantum_state.py:487[0m, in [0;36mQuantumState.__add__[0;34m(self, other)[0m
[1;32m    486[0m [38;5;28;01mdef[39;00m [38;5;21m__add__[39m([38;5;28mself[39m, other):
[0;32m--> 487[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_add[49m[43m([49m[43mother[49m[43m)[49m

File [0;32m~/anaconda3/lib/python3.9/site-packages/qiskit/quantum_info/states/statevector.py:336[0m, in [0;36mStatevector._add[0;34m(self, other)[0m
[1;32m    323[0m [38;5;124;03m"""Return the linear combination self + other.[39;00m
[1;32m    324[0m 
[1;32m    325[0m [38;5;124;03mArgs:[39;00m
[0;32m   (...)[0m
[1;32m    333[0m [38;5;124;03m                 incompatible dimensions.[39;00m
[1;32m    334[0m [38;5;124;03m"""[39;00m
[1;32m    335[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(other, Statevector):
[0;32m--> 336[0m     other [38;5;241m=[39m [43mStatevector[49m[43m([49m[43mother[49m[43m)[49m
[1;32m    337[0m [38;5;28mself[39m[38;5;241m.[39m_op_shape[38;5;241m.[39m_validate_add(other[38;5;241m.[39m_op_shape)
[1;32m    338[0m ret [38;5;241m=[39m copy[38;5;241m.[39mcopy([38;5;28mself[39m)

File [0;32m~/anaconda3/lib/python3.9/site-packages/qiskit/quantum_info/states/statevector.py:91[0m, in [0;36mStatevector.__init__[0;34m(self, data, dims)[0m
[1;32m     89[0m     [38;5;28mself[39m[38;5;241m.[39m_data [38;5;241m=[39m Statevector[38;5;241m.[39mfrom_instruction(data)[38;5;241m.[39mdata
[1;32m     90[0m [38;5;28;01melse[39;00m:
[0;32m---> 91[0m     [38;5;28;01mraise[39;00m QiskitError([38;5;124m"[39m[38;5;124mInvalid input data format for Statevector[39m[38;5;124m"[39m)
[1;32m     92[0m [38;5;66;03m# Check that the input is a numpy vector or column-vector numpy[39;00m
[1;32m     93[0m [38;5;66;03m# matrix. If it is a column-vector matrix reshape to a vector.[39;00m
[1;32m     94[0m ndim [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_data[38;5;241m.[39mndim

[0;31mQiskitError[0m: 'Invalid input data format for Statevector'
QiskitError: 'Invalid input data format for Statevector'

